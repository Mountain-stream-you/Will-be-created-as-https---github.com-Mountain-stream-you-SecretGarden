<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretGarden</name>
    </assembly>
    <members>
        <member name="M:SecretGarden.Bos.AdminUserBo.AddPeople(SecretGarden.PeopleDto.AddPeopleDto)">
            <summary>
            添加用户
            </summary>
            <param name="addPeopleDto"></param>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.CheckPeopleDto(SecretGarden.PeopleDto.AddPeopleDto)">
            <summary>
            校验peopledto合法性
            </summary>
            <param name="addPeopleDto"></param>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.checkEmail(System.String)">
            <summary>
            检查邮箱
            </summary>
            <param name="email"></param>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.CheckaddLoginDto(SecretGarden.Dtos.PeopleDto.AddLoginDto)">
            <summary>
            检查用户名是否唯一
            </summary>
            <param name="addLoginDto"></param>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.ResetPasswordByEmail(System.String,Microsoft.AspNetCore.Http.ISession)">
            <summary>
            通过邮箱重置密码
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.Login(SecretGarden.Dtos.PeopleDto.PeopleLoginDto)">
            <summary>
            用户登录
            </summary>
            <param name="peopleLoginDto"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.ResetPassword(System.String,System.String,System.String,System.String,Microsoft.AspNetCore.Http.ISession)">
            <summary>
            通过邮箱重置密码
            </summary>
            <param name="verificationCode"></param>
            <param name="password"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Bos.AdminUserBo.GetPeopleByCity">
            <summary>
            找出各个城市的人
            </summary>
        </member>
        <member name="M:SecretGarden.Bos.BoBase.SendEmail(MimeKit.MailboxAddress,MimeKit.MailboxAddress,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="mailFrom"></param>
            <param name="mailTo"></param>
            <param name="mailTitile"></param>
            <param name="mailHtmlBody"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Bos.BoBase.SendEmailWithAttachmentAsync(MimeKit.MailboxAddress,MimeKit.MailboxAddress,System.String,System.String,System.String,System.Byte[])">
            <summary>
            发送邮件, 带附件
            </summary>
            <param name="mailFrom"></param>
            <param name="mailTo"></param>
            <param name="mailTitle"></param>
            <param name="mailHtmlBody"></param>
            <param name="fileName"></param>
            <param name="fileContent"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Bos.PeopleBo.AddRelease(SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto)">
            <summary>
            创建约会记录
            </summary>
            <param name="releaseDto"></param>
        </member>
        <member name="M:SecretGarden.Bos.PeopleBo.CheckreleaseDto(SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto)">
            <summary>
            检查Dto是否合法
            </summary>
            <param name="releaseDto"></param>
        </member>
        <member name="M:SecretGarden.Bos.PeopleBo.SetPayPassword(SecretGarden.Dtos.PeopleDto.AddLoginDto)">
            <summary>
            设置密码和用户名
            </summary>
            <param name="addLoginDto"></param>
        </member>
        <member name="M:SecretGarden.Bos.PeopleBo.CreateSalt">
            <summary>
            生成加密用的盐值
            </summary>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.AddPeople(SecretGarden.PeopleDto.AddPeopleDto)">
            <summary>
            注册用户
            </summary>
            <param name="addPeopleDto"></param>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.ResetPasswordByEmail(System.String)">
            <summary>
            通过邮箱发送重置密码需要用到的验证码
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.ResetPassword(SecretGarden.Dtos.PeopleDto.ResetPasswordsDto)">
            <summary>
            重置密码
            </summary>
            <param name="idCard"></param>
            <param name="VerificationCode"></param>
            <param name="Newpassword"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.Login(SecretGarden.Dtos.PeopleDto.PeopleLoginDto)">
            <summary>
            用户登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.AddRelease(SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto)">
            <summary>
            添加约会记录
            </summary>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.GetRelease">
             <summary>
            获取留言 
             </summary>
             <returns></returns>
        </member>
        <member name="M:SecretGarden.Controllers.PeopleController.Pairing">
            <summary>
            寻找有缘人
            </summary>
            <returns></returns>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.AddLoginDto.PeopleId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.AddLoginDto.Password">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.AddLoginDto.NetName">
            <summary>
            网名
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.PeopleLoginDto.NetName">
            <summary>
            网名
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.PeopleLoginDto.Password">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.ResetPasswordsDto.IdCard">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.ResetPasswordsDto.Email">
            <summary>
            用户邮箱
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.ResetPasswordsDto.VerificationCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.PeopleDto.ResetPasswordsDto.Newpassword">
            <summary>
            重置后的密码
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto.PeopleId">
            <summary>
            创建人Id
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto.Convention">
            <summary>
            约定时间
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto.Place">
            <summary>
            约定地点
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto.FailureTime">
             <summary>
            失效时间 
             </summary>
        </member>
        <member name="P:SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto.Email">
            <summary>
            联系邮箱
            </summary>
        </member>
        <member name="P:SecretGarden.Dtos.ReleaseInformationDto.ReleaseDto.leaveMessage">
            <summary>
            留言
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.Name">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.NetName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.PassWord">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.Sex">
            <summary>
            性别类型
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.IdType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.PeopleIdNumber">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.Phone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:SecretGarden.PeopleDto.AddPeopleDto.BirthDay">
            <summary>
            生日
            </summary>
        </member>
        <member name="T:SecretGarden.Model.BaseModel">
            <summary>
            基类Model
            </summary>
        </member>
        <member name="P:SecretGarden.Model.BaseModel.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:SecretGarden.Model.BaseModel.Guid">
            <summary>
            Guid标识
            </summary>
        </member>
        <member name="P:SecretGarden.Model.BaseModel.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:SecretGarden.Model.BaseModel.EditTime">
            <summary>
            编辑时间
            </summary>
        </member>
        <member name="P:SecretGarden.Model.BaseModel.IsDeleted">
            <summary>
            逻辑删除
            </summary>
        </member>
        <member name="P:SecretGarden.Model.MsgModel.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Name">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.NetName">
            <summary>
            网名
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Sex">
            <summary>
            性别类型
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Password">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.IdType">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.PeopleIdNumber">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Phone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.BirthDay">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:SecretGarden.Model.People.Salt">
            <summary>
            加密的用盐值
            </summary>
        </member>
        <member name="T:SecretGarden.Model.ReleaseInformation">
            <summary>
            约会记录表
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.PeopleId">
            <summary>
            人员Id
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.People">
            <summary>
            关联人员表
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.Convention">
            <summary>
            约定时间
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.Place">
            <summary>
            约定地点
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.FailureTime">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.Email">
            <summary>
            备用邮箱
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.LeaveMessage">
            <summary>
            留言
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.VerificationCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ReleaseInformation.VerificationCodeISvalid">
            <summary>
            验证码发送时间
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ResultMsgDto.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ResultMsgDto.Msg">
            <summary>
             返回信息
            </summary>
        </member>
        <member name="P:SecretGarden.Model.ResultMsgDto.Count">
            <summary>
            总条数
            </summary>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.AddPeople(SecretGarden.Model.People)">
            <summary>
            添加人员
            </summary>
            <param name="people"></param>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.addRelease(SecretGarden.Model.ReleaseInformation)">
            <summary>
            添加约会记录
            </summary>
            <param name="release"></param>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.GetPeopleBoByIdCard(System.String)">
            <summary>
            通过身份证获取用户
            </summary>
            <param name="idCard"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.GetPeopleByCity">
            <summary>
            找出各个城市的人
            </summary>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.SetPayPassword(SecretGarden.Model.People)">
            <summary>
            设置密码和用户名
            </summary>
            <param name="people"></param>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.ResetPassword(SecretGarden.Bos.PeopleBo)">
            <summary>
            通过邮箱重置密码
            </summary>
            <param name="peopleBo"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.Login(SecretGarden.Dtos.PeopleDto.PeopleLoginDto)">
            <summary>
            用户登录
            </summary>
            <param name="peopleLoginDto"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Repositories.PeopleRepo.GetReleas">
            <summary>
            获取留言信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Repositories.SecretGardenContext.SaveChanges(System.Boolean)">
            <summary>
            重写SaveChanges方法
            </summary>
            <param name="acceptAllChangesOnSuccess"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Repositories.SecretGardenContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            重写SaveChangesAsync方法
            </summary>
            <param name="acceptAllChangesOnSuccess"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SecretGarden.Repositories.SecretGardenContext.OnBeforeSaving">
            <summary>
            定义逻辑删除字段更新规则
            </summary>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckStringListNull(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            字符串数组不能为空
            </summary>
            <param name="ls"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.IsNullOrEmpty(System.String)">
            <summary>
            判断字符串是否Null 或 空
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.IsExistAndNotEmpty(System.String)">
            <summary>
            是否有值
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.ToChineseDateTimeString(System.DateTime)">
            <summary>
            转为 2020-03-17 12:12:01 格式的日期时间字符串
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.ToChineseDateString(System.DateTime)">
            <summary>
            /// 转为 2020-03-17 格式的日期字符串
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckValidDateTime(System.DateTime,System.String)">
            <summary>
            检查是否无效的时间,如0001-01-01 00:00:00
            </summary>
            <param name="dateTime"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckBeginTimeBeforeEndTime(System.DateTime,System.DateTime,System.String)">
            <summary>
            检查开始时间与结束时间是否是有效时间,且开始时间小于结束时间
            </summary>
            <param name="beginTime"></param>
            <param name="endTime"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckBeginTimeOrNullBeforeEndTimeOrNull(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.String)">
            <summary>
            检查开始时间与结束时间是否是有效时间,异常情况:开始时间> 结束时间
            </summary>
            <param name="beginTime"></param>
            <param name="endTime"></param>
            <param name="IsCanIncludeEqual"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.IsZero(System.Int32)">
            <summary>
            判断数字是否为0
            </summary>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckIntZero(System.Int32,System.String)">
            <summary>
            Id int 参数不能为0
            </summary>
            <param name="Id"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckIntLessThanZero(System.Int32,System.String)">
            <summary>
            Id int 参数不能小于0
            </summary>
            <param name="Id"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckDecimalZero(System.Decimal,System.String)">
            <summary>
            Decimal price  参数不能为0
            </summary>
            <param name="price"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckLessThan2DecimalPlaces(System.Decimal,System.String)">
            <summary>
            检查小数点不能超过两位
            </summary>
            <param name="price"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckDecimalPrice(System.Decimal,System.String)">
            <summary>
            价格检查须大于0: 1:不能小于等于0, 2:小数点后不能超过两位,
            </summary>
            <param name="price"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckDecimal_0To1(System.Decimal,System.String)">
            <summary>
            检查折扣必须在0~1之间
            </summary>
            <param name="discountRate"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.IsDecimalPrice(System.Decimal)">
            <summary>
            判断是否为有效的金额数字
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckNullOrEmpty``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            数组不能为空
            </summary>
            <param name="ls"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            数组是否为Null 或 0
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckTelephoneIsValid(System.String,System.String)">
            <summary>
            检查手机号码是否有效
            </summary>
            <param name="tel">电话号码</param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.GetTelephoneValid(System.String)">
            <summary>
            获取手机号码有效值
            </summary>
            <param name="tel">手机号码</param>
        </member>
        <member name="M:PointsMall.Common.ArgumentHelper.CheckExcelFile(System.String,System.String)">
            <summary>
            验证文件是否为Excel
            </summary>
            <param name="fileExtension">文件后缀</param>
            <param name="errMsg"></param>
        </member>
        <member name="M:PointsMall.Common.ByteConvertHelper.Object2Bytes(System.Object)">
            <summary>
            将对象转换为byte数组
            </summary>
            <param name="obj">被转换对象</param>
            <returns>转换后byte数组</returns>
        </member>
        <member name="M:PointsMall.Common.ByteConvertHelper.Bytes2Object``1(System.Byte[])">
            <summary>
            将byte数组转换成对象
            </summary>
            <param name="buff">被转换byte数组</param>
            <returns>转换完成后的对象</returns>
        </member>
        <member name="T:PointsMall.Common.MailClient">
            <summary>
            发送邮件, 带附件
            </summary>
            <param name="mailFrom"></param>
            <param name="mailTo"></param>
            <param name="mailTitle"></param>
            <param name="mailHtmlBody"></param>
            <param name="fileName"></param>
            <param name="fileContent"></param>
            <returns></returns>
            <summary>
            邮件发送客户端参数
            </summary>
        </member>
        <member name="P:PointsMall.Common.MailClient.Host">
            <summary>
            Smtp 服务器地址
            </summary>
        </member>
        <member name="P:PointsMall.Common.MailClient.Port">
            <summary>
            Smtp 服务器端口
            </summary>
        </member>
        <member name="P:PointsMall.Common.MailClient.UseSsl">
            <summary>
            是否使用SSL
            </summary>
        </member>
        <member name="P:PointsMall.Common.MailClient.MailFromAccount">
            <summary>
            在Smtp服务器进行发邮件的账号
            </summary>
        </member>
        <member name="P:PointsMall.Common.MailClient.MailFromPassword">
            <summary>
            在Smtp服务器进行发邮件账号的密码
            </summary>
        </member>
        <member name="T:PointsMall.Common.EncryptionHelper">
            <summary>
            加/解密相关静态类
            </summary>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.RSA_Encrypt(System.String,System.String)">
            <summary>
            RSA公钥加密
            </summary>
            <param name="strPlainText">加密明文</param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.RSA_Decrypt(System.String,System.String)">
            <summary>
            RSA私钥解密
            </summary>
            <param name="strCypherText">密文</param>
            <param name="privateKey">私钥</param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.CreateRsaProviderFromPrivateKey(System.String)">
            <summary>
            RSA实例化
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.GetIntegerSize(System.IO.BinaryReader)">
            <summary>
            解析密钥私钥对应指数及模数
            </summary>
            <param name="binr"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.MD5Hash(System.String)">
            <summary>
            Md5加密
            </summary>
            <param name="secret">加密内容</param>
            <returns>string</returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.MD5HashToUpper(System.String)">
            <summary>
            Md5加密
            转大写
            </summary>
            <param name="secret">加密内容</param>
            <returns>string</returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.GetHMACSHA1Text(System.String,System.String)">
            <summary>
            HMACSHA1加密
            </summary>
            <param name="EncryptText">待加密明文</param>
            <param name="EncryptKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.DES_Encrypt(System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="strEncrypt">需要加密的</param>
            <param name="strKey">密匙</param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.DES_Decrypt(System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="strDecrypt">需要解密的</param>
            <param name="strKey">密匙</param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.HexStringToBytes(System.String)">
            <summary>
            将16进制字符串转化为 字节流
            </summary>
            <param name="hexStr"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EncryptionHelper.BytesTohexString(System.Byte[])">
            <summary>
            将字节流转化为16进制字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EnumHelper.EnumListFromDescriptions``1(``0[],System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            取枚举的自定义属性的描述值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fliter"></param>
            <param name="IsHasAll"></param>
            <param name="keyOfAll"></param>
            <param name="valueOfAll"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EnumHelper.EnumListFromEnumName``1(``0[],System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fliter">要过滤掉的枚举数组</param>
            <param name="IsHasAll"></param>
            <param name="keyOfAll"></param>
            <param name="valueOfAll"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EnumHelper.EnumList``1(``0[],System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fliter">要过虑的枚举数组</param>
            <param name="isDescription"></param>
            <param name="IsHasAll"></param>
            <param name="keyOfAll"></param>
            <param name="valueOfAll"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.EnumHelper.ConvertToEnum``1(System.String)">
            <summary>
            将字符串转换为枚举类型值
            </summary>
            <typeparam name="E">枚举类型</typeparam>
            <param name="enumName">字符串</param>
            <returns>枚举值</returns>
        </member>
        <member name="M:PointsMall.Common.EnumHelper.EnumDropDownList(System.Type)">
            <summary>
            获取枚举类型下拉数据
            </summary>
            <param name="t"></param>        
            <returns></returns>
        </member>
        <member name="T:PointsMall.Common.DescriptionAttribute">
            <summary>
            备注特性
            </summary>
        </member>
        <member name="P:PointsMall.Common.DescriptionAttribute.Description">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:PointsMall.Common.EnumExtension">
            <summary>
            枚举扩展类
            </summary>
        </member>
        <member name="M:PointsMall.Common.EnumExtension.GetDescription(System.Enum)">
            <summary>
            获取枚举的备注信息
            </summary>
            <param name="em"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ExcelHelper.DownloadTemplate(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            下载excel模板
            </summary>
            <returns></returns>
        </member>
        <member name="T:PointsMall.Common.ExceptionHelper">
            <summary>
            项目中常用的Exception列表
            </summary>
        </member>
        <member name="M:PointsMall.Common.ExceptionHelper.DataNotFoundException(System.String)">
            <summary>
            数据库,配置,Redis,接口返回等找不到想要的数据
             DataNotFoundException HttpStatusCode = 404(未找到)
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PointsMall.Common.ExceptionHelper.InvalidDataException(System.String)">
            <summary>
            数据库中的数据不合法,脏数据
            InvalidDataException  409;(数据冲突)
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PointsMall.Common.ExceptionHelper.InvalidArgumentException(System.String)">
            <summary>
            InvalidArgumentException  400//错误请求
            输入的参数不合法或为空
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PointsMall.Common.ExceptionHelper.InvalidOperationException(System.String)">
            <summary>
            没有权限下的操作,资源过期如合同过期后继续添加体检订单等, 
            订单未支付情况,要预约体检等..  405; (资源禁用)
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PointsMall.Common.ExceptionHelper.NotSupportedException(System.String)">
            <summary>
            不支持此操作
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PointsMall.Common.ExceptionHelper.UnknownException(System.String)">
            <summary>
            其他情况,直接用Exception 500;// (服务器内部错误)
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:PointsMall.Common.Exceptions.DataNotFoundException.Code">
            <summary>
            对应HttpStatusCode 
            </summary>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.GetICellStyle(System.String)">
            <summary>
            获取定义的单元个样式（先定义后获取）
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.toExcel(System.Collections.Generic.List{PointsMall.Common.Sheetitem})">
            <summary>
            导出Excel
            </summary>
            <param name="sheetitem"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.Import(Microsoft.AspNetCore.Http.IFormFile,System.Boolean)">
            <summary>
            只读取不保存
            </summary>
            <param name="excelfile"></param>
            <param name="IsHaveHead"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.SetColumn(System.Collections.Generic.List{PointsMall.Common.excle_option},NPOI.SS.UserModel.ICell@,NPOI.SS.UserModel.IRow@,NPOI.SS.UserModel.ISheet@,NPOI.HSSF.UserModel.HSSFPatriarch@,System.Int32@)">
            <summary>
            设置每列数据
            </summary>
            <param name="option"></param>
            <param name="cell0"></param>
            <param name="row0"></param>
            <param name="sheet1"></param>
            <param name="patr"></param>
            <param name="RowNuber"></param>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.GetFontStyle(System.String,System.Int16,System.Int32,System.Int16)">
            <summary>
            获取字体样式
            </summary>
            <param name="fontfamily"></param>
            <param name = "fontcolor" > 字体颜色 </param >
            <param name="fontsize">字体大小</param>
            <param name="BoldWeight"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.setStyle(System.String,System.String,System.Int16,System.Int32,System.Boolean,System.Int16,System.Int32,System.Int32,System.Int16)">
            <summary>
            设置单元格式
            </summary>
            <param name="Name"></param>
            <param name="fontfamily"></param>
            <param name="fontcolor">颜色请查询NPOI对应颜色</param>
            <param name="fontsize"></param>
            <param name="IsBorder"></param>
            <param name="FillBackgroundColor"></param>
            <param name="_HorizontalAlignment">1：居中 2右对齐 3左对齐</param>
            <param name="_VerticalAlignment">1：居中 2居上 3居下</param>
            <param name="BoldWeight"></param>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.setStyle(System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.Int16)">
            <summary>
            设置单元格式
            </summary>
            <param name="Name"></param>
            <param name="fontfamily"></param>
            <param name="fontcolor">设置后的颜色名称</param>
            <param name="fontsize"></param>
            <param name="IsBorder"></param>
            <param name="FillBackgroundColor">设置后的颜色名称</param>
            <param name="BoldWeight"></param>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.SetColortoNpoi(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            自定义颜色
            </summary>
            <param name="Index">范围8-64（会覆盖原编号颜色）</param>
            <param name="Red">R</param>
            <param name="Greed">G</param>
            <param name="Blue">B</param>
            <param name="Name">颜色名称</param>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.ToIndex(System.String)">
            <summary>
            将Excel列转成数字
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.ExportExcel.ToName(System.Int32)">
            <summary>
            数字转excel列名
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:PointsMall.Common.excle_option">
            <summary>
            详细的单元格数据
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.TypeOfValue">
            <summary>
            单元格内容格式：0：string 1:bool 2:DateTime 3 double 4 公式 默认0；
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.index">
            <summary>
            第几列
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.value">
            <summary>
            项目值
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.option">
            <summary>
            项目选择如无则传NULL
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.Description">
            <summary>
            项目描述
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.ICellStyle">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="P:PointsMall.Common.excle_option.CellRange">
            <summary>
            设置合并行列
            </summary>
        </member>
        <member name="T:PointsMall.Common.Sheetitem">
            <summary>
            excel钟的一个sheet对象
            </summary>
        </member>
        <member name="P:PointsMall.Common.Sheetitem.Name">
            <summary>
            Sheet名字
            </summary>
        </member>
        <member name="P:PointsMall.Common.Sheetitem.Thread">
            <summary>
            Sheet头部
            </summary>
        </member>
        <member name="P:PointsMall.Common.Sheetitem.RowData">
            <summary>
            Sheet数据
            </summary>
        </member>
        <member name="P:PointsMall.Common.Sheetitem.footer">
            <summary>
            sheet尾部
            </summary>
        </member>
        <member name="P:PointsMall.Common.Sheetitem.ColumnWidth">
            <summary>
            设置列宽度（可不填）key 行号 ；value ：宽度
            </summary>
        </member>
        <member name="T:PointsMall.Common.RowData">
            <summary>
            每行的数据
            </summary>
        </member>
        <member name="P:PointsMall.Common.RowData.rowHeiht">
            <summary>
            行高
            </summary>
        </member>
        <member name="F:PointsMall.Common.SSTemplateOptionType.SO">
            <summary>
            社保
            </summary>
        </member>
        <member name="F:PointsMall.Common.SSTemplateOptionType.GJJ">
            <summary>
            公积金
            </summary>
        </member>
        <member name="F:PointsMall.Common.SSTemplateOptionType.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="F:PointsMall.Common.SSTemplateOptionType.PT">
            <summary>
            常规字段
            </summary>
        </member>
        <member name="F:PointsMall.Common.SSTemplateOptionType.mark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:PointsMall.Common.CellRange">
            <summary>
            合并单元格
            </summary>
        </member>
        <member name="P:PointsMall.Common.CellRange.RowBegin">
            <summary>
            起始行
            </summary>
        </member>
        <member name="P:PointsMall.Common.CellRange.RowEnd">
            <summary>
            结束行
            </summary>
        </member>
        <member name="P:PointsMall.Common.CellRange.BeginColumn">
            <summary>
            起始列
            </summary>
        </member>
        <member name="P:PointsMall.Common.CellRange.EndColumn">
            <summary>
            结束列
            </summary>
        </member>
        <member name="T:PointsMall.Common.HttpClientHelper">
            <summary>
            公共使用类
            </summary>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpGet(System.Uri)">
            <summary>
            模拟get请求
            </summary>
            <param name="url">url</param>
            <returns>String</returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.GetAsync``1(System.Uri)">
            <summary>
            发送http get请求从另一个服务地址获取信息
            </summary>
            <param name="requestUri">uri</param>
            <returns>Response message</returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpPostJsonAsync(System.Uri,System.String)">
            <summary>
            发送post请求到另一个服务, 请求API不应该捕捉异常然后只记录日志,这样会导致业务部分成功
            </summary>
            <param name="uri">Uri路径</param>
            <param name="jsonData">post对象</param>
            <returns>Response message</returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpPostXml(System.Uri,System.String)">
            <summary>
            
            </summary>
            <param name="uri"></param>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpPutJson(System.Uri,System.String)">
            <summary>
            application/json数据格式模拟put请求
            </summary>
            <param name="uri">地址</param>
            <param name="data">数据</param>
            <returns>string</returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpDeleteJson(System.Uri,System.String)">
            <summary>
            application/json数据格式模拟Delete请求
            </summary>
            <param name="uri">地址</param>
            <param name="data">数据</param>
            <returns>string</returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpPut(System.Uri,System.String)">
            <summary>
            模拟put表单请求
            </summary>
            <param name="url">请求路径</param>
            <param name="putData">参数</param>
            <returns>String</returns>
        </member>
        <member name="M:PointsMall.Common.HttpClientHelper.HttpDelete(System.Uri,System.String)">
            <summary>
            模拟delete表单请求
            </summary>
            <param name="url">路径</param>
            <param name="deleteData">参数</param>
            <returns>String</returns>
        </member>
        <member name="F:PointsMall.Common.EnumHttpContentType.FormData">
            <summary>
            表单数据(Form)
            </summary>
        </member>
        <member name="F:PointsMall.Common.EnumHttpContentType.JsonData">
            <summary>
            Json数据(Body)
            </summary>
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.GetIDCardInfo(System.String)">
            <summary>
            解析身份证件号信息
            </summary>
            <param name="idCardNo">证件号号码</param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.CalculateAge(System.String)">
            <summary>
            根据出生日期，计算精确的年龄
            </summary>
            <param name="birthday">生日</param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.GetBirthDay(System.String)">
            <summary>
            获取出生日期
            </summary>
            <param name="idCardNo"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.GetGenderStr(System.String)">
            <summary>
            获取性别
            </summary>
            <param name="idCardNo"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.GetIsValid(System.String)">
            <summary>
            校验身份证是否有效
            </summary>
            <param name="idCardNo"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.CheckIDCard18(System.String)">
            <summary>  
            18位身份证号码验证  
            </summary>  
        </member>
        <member name="M:PointsMall.Common.IDCardHelper.CheckIDCard15(System.String)">
            <summary>  
            15位身份证号码验证  
            </summary>  
        </member>
        <member name="T:PointsMall.Common.IDCardInfo">
            <summary>
            定义识别信息实体
            </summary>
        </member>
        <member name="P:PointsMall.Common.IDCardInfo.Birthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:PointsMall.Common.IDCardInfo.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:PointsMall.Common.IDCardInfo.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="M:PointsMall.Common.JsonAttributeHelper`1.DataMemberName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            获取JsonPropertyAttribute构造参数值
            </summary>
            <typeparam name="Result"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.JsonHelper.GetReceiveAddress(System.String)">
            <summary>
            获取收获地址
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.JsonHelper.GetProductAttribute(System.String)">
            <summary>
            获取商品属性
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.JsonHelper.GetValueLength(System.String,System.Boolean,System.Int32@)">
            <summary>
            获取值的长度（当Json值嵌套以"{"或"["开头时）
            </summary>
        </member>
        <member name="T:PointsMall.Common.JsonHelper.CharState">
            <summary>
            字符状态
            </summary>
        </member>
        <member name="F:PointsMall.Common.JsonHelper.CharState.arrayStart">
            <summary>
            数组开始【仅第一开头才算】，值嵌套的以【childrenStart】来标识。
            </summary>
        </member>
        <member name="F:PointsMall.Common.JsonHelper.CharState.state">
            <summary>
            【0 初始状态，或 遇到“,”逗号】；【1 遇到“：”冒号】
            </summary>
        </member>
        <member name="F:PointsMall.Common.JsonHelper.CharState.keyStart">
            <summary>
            【-1 取值结束】【0 未开始】【1 无引号开始】【2 单引号开始】【3 双引号开始】
            </summary>
        </member>
        <member name="F:PointsMall.Common.JsonHelper.CharState.valueStart">
            <summary>
            【-1 取值结束】【0 未开始】【1 无引号开始】【2 单引号开始】【3 双引号开始】
            </summary>
        </member>
        <member name="M:PointsMall.Common.JsonHelper.SetCharState(System.Char,PointsMall.Common.JsonHelper.CharState@)">
            <summary>
            设置字符状态(返回true则为关键词，返回false则当为普通字符处理）
            </summary>
        </member>
        <member name="T:PointsMall.Common.ReceiveAddress">
            <summary>
            收货地址对象
            </summary>
        </member>
        <member name="P:PointsMall.Common.ReceiveAddress.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:PointsMall.Common.ReceiveAddress.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:PointsMall.Common.ReceiveAddress.Region">
            <summary>
            区
            </summary>
        </member>
        <member name="P:PointsMall.Common.ReceiveAddress.Town">
            <summary>
            镇/街道
            </summary>
        </member>
        <member name="P:PointsMall.Common.ReceiveAddress.DetailAddress">
            <summary>
            详细地址
            </summary>
        </member>
        <member name="T:PointsMall.Common.PageResult`1">
            属性名统一为小写，避免Json序列化后属性首字母还是大写，与Table要的格式不匹配
            <summary>
            返回的页数据
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="P:PointsMall.Common.PageResult`1.Code">
            <summary>
            查询结果状态码 : LayUI Table 默认要求的参数名与值，成功默认为：0;成功不用设置
            </summary>
        </member>
        <member name="P:PointsMall.Common.PageResult`1.Msg">
            <summary>
            结果信息
            </summary>
        </member>
        <member name="P:PointsMall.Common.PageResult`1.Count">
            <summary>
            总录数: LayUI Table 默认要求的参数名
            </summary>
        </member>
        <member name="P:PointsMall.Common.PageResult`1.PageSize">
            <summary>
            每页显示的条数
            </summary>
        </member>
        <member name="P:PointsMall.Common.PageResult`1.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:PointsMall.Common.PageResult`1.Data">
            <summary>
            获取或设置当前页码的数据
            </summary>
        </member>
        <member name="P:PointsMall.Common.FyuPageResult`1.TotalNumber">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:PointsMall.Common.FyuPageResult`1.TotalPage">
            <summary>
            总页数
            </summary>
        </member>
        <member name="M:PointsMall.Common.RandomHelper.GetNumRandom(System.Int32)">
            <summary>
            获得三位的随机数
            </summary>
            <returns></returns>
        </member>
        <member name="M:PointsMall.Common.RandomHelper.ConvertPrice(System.Decimal)">
            <summary>
            转换金额保留两位小数三位分隔
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
    </members>
</doc>
